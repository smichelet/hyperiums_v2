{"ast":null,"code":"var _jsxFileName = \"/home/woot/coding/hyperiums2/front/src/App.js\";\nimport { FormatData } from './components/formatData';\nimport { FormatToCSV } from './components/formatToCSV';\nimport { MaxCoord } from './components/maxCoord';\nimport { ReadFile } from './components/readFile';\nimport { RenderGrid } from './components/renderGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // Appel de la fonction pour lire le fichier local\n  const fileName = './planetsFull.txt';\n  const file = ReadFile(fileName);\n\n  // Appel de la fonction pour formatter le fichier au format CSV\n  const csvFile = FormatToCSV(file);\n\n  // Appel de la fonction qui structure les données\n  const data = FormatData(csvFile);\n  console.log(data);\n\n  // Appel de la fonction pour avoir la coordonnée maximale\n  const maxCoord = MaxCoord(csvFile);\n  console.log(maxCoord);\n\n  // Génération de la grille\n  const grid = RenderGrid(data, maxCoord);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tbody\",\n        children: grid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["FormatData","FormatToCSV","MaxCoord","ReadFile","RenderGrid","jsxDEV","_jsxDEV","App","fileName","file","csvFile","data","console","log","maxCoord","grid","children","className","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/woot/coding/hyperiums2/front/src/App.js"],"sourcesContent":["import { FormatData } from './components/formatData';\nimport { FormatToCSV } from './components/formatToCSV';\nimport { MaxCoord } from './components/maxCoord';\nimport { ReadFile } from './components/readFile';\nimport { RenderGrid } from './components/renderGrid';\n\nfunction App() {\n  // Appel de la fonction pour lire le fichier local\n  const fileName = './planetsFull.txt';\n  const file = ReadFile(fileName);\n\n  // Appel de la fonction pour formatter le fichier au format CSV\n  const csvFile = FormatToCSV(file);\n\n  // Appel de la fonction qui structure les données\n  const data = FormatData(csvFile);\n  console.log(data);\n\n  // Appel de la fonction pour avoir la coordonnée maximale\n  const maxCoord = MaxCoord(csvFile);\n  console.log(maxCoord)\n\n  // Génération de la grille\n  const grid = RenderGrid(data, maxCoord);\n\n  return(\n    <div>\n      <table className=\"grid\">\n        <tbody className=\"tbody\">\n          {grid}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAMC,QAAQ,GAAG,mBAAmB;EACpC,MAAMC,IAAI,GAAGN,QAAQ,CAACK,QAAQ,CAAC;;EAE/B;EACA,MAAME,OAAO,GAAGT,WAAW,CAACQ,IAAI,CAAC;;EAEjC;EACA,MAAME,IAAI,GAAGX,UAAU,CAACU,OAAO,CAAC;EAChCE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;EAEjB;EACA,MAAMG,QAAQ,GAAGZ,QAAQ,CAACQ,OAAO,CAAC;EAClCE,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;;EAErB;EACA,MAAMC,IAAI,GAAGX,UAAU,CAACO,IAAI,EAAEG,QAAQ,CAAC;EAEvC,oBACER,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAOW,SAAS,EAAC,MAAM;MAAAD,QAAA,eACrBV,OAAA;QAAOW,SAAS,EAAC,OAAO;QAAAD,QAAA,EACrBD;MAAI;QAAAP,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAZ,QAAA,EAAAU,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACC,EAAA,GA5BQd,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}