{"ast":null,"code":"var _jsxFileName = \"/home/woot/coding/hyperiums2/front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FormatData } from './components/formatData';\nimport { FormatToCSV } from './components/formatToCSV';\nimport { ReadFile } from './components/readFile';\nimport { RenderGrid } from './components/renderGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Appel de la fonction pour lire le fichier local\n  const fileName = './planets.txt';\n  const file = ReadFile(fileName);\n\n  // Appel de la fonction pour formatter le fichier au format CSV\n  const csvFile = FormatToCSV(file);\n  console.log(csvFile);\n  // Appel de la fonction qui trie et structure les données\n  const [formattedData, setFormattedData] = useState(null);\n  useEffect(() => {\n    FormatData(csvFile).then(structuredData => {\n      setFormattedData(structuredData);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [csvFile]);\n  const grid = RenderGrid(formattedData, csvFile);\n  console.log(formattedData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zn7xFwFXySo31w6LWz3eR8oxYII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FormatData","FormatToCSV","ReadFile","RenderGrid","jsxDEV","_jsxDEV","App","_s","fileName","file","csvFile","console","log","formattedData","setFormattedData","then","structuredData","catch","err","error","grid","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/woot/coding/hyperiums2/front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FormatData } from './components/formatData';\nimport { FormatToCSV } from './components/formatToCSV';\nimport { ReadFile } from './components/readFile';\nimport { RenderGrid } from './components/renderGrid';\n\nfunction App() {\n  // Appel de la fonction pour lire le fichier local\n  const fileName = './planets.txt';\n  const file = ReadFile(fileName);\n\n  // Appel de la fonction pour formatter le fichier au format CSV\n  const csvFile = FormatToCSV(file);\n  console.log(csvFile)\n  // Appel de la fonction qui trie et structure les données\n  const [formattedData, setFormattedData] = useState(null);\n  useEffect(() => {\n    FormatData(csvFile)\n      .then((structuredData) => {\n        setFormattedData(structuredData);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [csvFile]);\n\n  const grid = RenderGrid(formattedData, csvFile);\n  console.log(formattedData);\n\n  return(\n    <div>\n      <p>Bla</p>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,QAAQ,GAAG,eAAe;EAChC,MAAMC,IAAI,GAAGP,QAAQ,CAACM,QAAQ,CAAC;;EAE/B;EACA,MAAME,OAAO,GAAGT,WAAW,CAACQ,IAAI,CAAC;EACjCE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB;EACA,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxDC,SAAS,CAAC,MAAM;IACdC,UAAU,CAACU,OAAO,CAAC,CAChBK,IAAI,CAAEC,cAAc,IAAK;MACxBF,gBAAgB,CAACE,cAAc,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdP,OAAO,CAACQ,KAAK,CAACD,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,MAAMU,IAAI,GAAGjB,UAAU,CAACU,aAAa,EAAEH,OAAO,CAAC;EAC/CC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;EAE1B,oBACER,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,EAAG;IAAG;MAAAb,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI;IAAAhB,QAAA,EAAAc,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV;AAACjB,EAAA,CA5BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}