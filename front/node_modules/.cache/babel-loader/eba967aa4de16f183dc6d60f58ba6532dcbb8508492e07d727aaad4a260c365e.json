{"ast":null,"code":"class ResizeableBuffer {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val) {\n    if (Buffer.isBuffer(val)) {\n      const length = this.length + val.length;\n      if (length >= this.size) {\n        this.resize();\n        if (length >= this.size) {\n          throw Error('INVALID_BUFFER_STATE');\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    } else {\n      const length = this.length++;\n      if (length === this.size) {\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }\n  append(val) {\n    const length = this.length++;\n    if (length === this.size) {\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone() {\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize() {\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf, 0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding) {\n    if (encoding) {\n      return this.buf.slice(0, this.length).toString(encoding);\n    } else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON() {\n    return this.toString('utf8');\n  }\n  reset() {\n    this.length = 0;\n  }\n}\nexport default ResizeableBuffer;","map":{"version":3,"names":["ResizeableBuffer","constructor","size","arguments","length","undefined","buf","Buffer","allocUnsafe","prepend","val","isBuffer","resize","Error","copy","clone","append","from","slice","toString","encoding","Uint8Array","prototype","call","toJSON","reset"],"sources":["/home/woot/coding/hyperiums2/front/node_modules/csv-parse/lib/utils/ResizeableBuffer.js"],"sourcesContent":["\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val){\n    if(Buffer.isBuffer(val)){\n      const length = this.length + val.length;\n      if(length >= this.size){\n        this.resize();\n        if(length >= this.size){\n          throw Error('INVALID_BUFFER_STATE');\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    }else{\n      const length = this.length++;\n      if(length === this.size){\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf,1, 0, length);\n    }\n  }\n  append(val){\n    const length = this.length++;\n    if(length === this.size){\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize(){\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf,0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding){\n    if(encoding){\n      return this.buf.slice(0, this.length).toString(encoding);\n    }else{\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON(){\n    return this.toString('utf8');\n  }\n  reset(){\n    this.length = 0;\n  }\n}\n\nexport default ResizeableBuffer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}