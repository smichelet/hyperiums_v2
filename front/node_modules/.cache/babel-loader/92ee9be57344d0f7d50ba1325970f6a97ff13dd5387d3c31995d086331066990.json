{"ast":null,"code":"var _jsxFileName = \"/home/woot/coding/hyperiums2/front/src/components/renderGrid.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RenderGrid(planets) {\n  const grid = [];\n  const maxCoord = parseInt('31'); // maximum des coordonnées x et y\n\n  // Générer chaque ligne de la grille\n  for (let y = maxCoord; y >= -maxCoord; y--) {\n    const row = [];\n\n    // Générer chaque cellule de la ligne\n    for (let x = -maxCoord; x <= maxCoord; x++) {\n      // Vérifier si la cellule contient des planètes\n      if (planets[x] && planets[x][y]) {\n        const cell = /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [\"(\", x, \", \", y, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this), planets[x][y].map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [planet.name, \" \", planet.tag]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)\n          }, planet.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this))]\n        }, `${x},${y}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this);\n        row.push(cell);\n      } else {\n        row.push( /*#__PURE__*/_jsxDEV(\"td\", {}, `${x},${y}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this));\n      }\n    }\n\n    // Ajouter la ligne à la grille\n    grid.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: row\n    }, y, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this));\n  }\n  console.log(grid);\n  return grid;\n}\n_c = RenderGrid;\nvar _c;\n$RefreshReg$(_c, \"RenderGrid\");","map":{"version":3,"names":["RenderGrid","planets","grid","maxCoord","parseInt","y","row","x","cell","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","map","planet","name","tag","push","console","log","_c","$RefreshReg$"],"sources":["/home/woot/coding/hyperiums2/front/src/components/renderGrid.js"],"sourcesContent":["export function RenderGrid(planets) {\n  const grid = [];\n  const maxCoord = parseInt('31'); // maximum des coordonnées x et y\n\n  // Générer chaque ligne de la grille\n  for (let y = maxCoord; y >= -maxCoord; y--) {\n    const row = [];\n\n    // Générer chaque cellule de la ligne\n    for (let x = -maxCoord; x <= maxCoord; x++) {\n    // Vérifier si la cellule contient des planètes\n    if (planets[x] && planets[x][y]) {\n      const cell = (\n        <td key={`${x},${y}`}>\n          <tr>({x}, {y})</tr>\n          {planets[x][y].map(planet => (\n            <div key={planet.name}>\n              <p>{planet.name} {planet.tag}</p>\n              {/* Ajoutez ici les autres informations de la planète */}\n            </div>\n          ))}\n        </td>\n      );\n      row.push(cell);\n    } else {\n      row.push(<td key={`${x},${y}`}></td>);\n    }}\n\n    // Ajouter la ligne à la grille\n    grid.push(<tr key={y}>{row}</tr>);\n  }\n\tconsole.log(grid)\n\treturn grid;\n}"],"mappings":";;AAAA,OAAO,SAASA,UAAUA,CAACC,OAAO,EAAE;EAClC,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,QAAQ,GAAGC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEjC;EACA,KAAK,IAAIC,CAAC,GAAGF,QAAQ,EAAEE,CAAC,IAAI,CAACF,QAAQ,EAAEE,CAAC,EAAE,EAAE;IAC1C,MAAMC,GAAG,GAAG,EAAE;;IAEd;IACA,KAAK,IAAIC,CAAC,GAAG,CAACJ,QAAQ,EAAEI,CAAC,IAAIJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;MAC5C;MACA,IAAIN,OAAO,CAACM,CAAC,CAAC,IAAIN,OAAO,CAACM,CAAC,CAAC,CAACF,CAAC,CAAC,EAAE;QAC/B,MAAMG,IAAI,gBACRC,OAAA;UAAAC,QAAA,gBACED,OAAA;YAAAC,QAAA,GAAI,GAAC,EAACH,CAAC,EAAC,IAAE,EAACF,CAAC,EAAC,GAAC;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,EAClBb,OAAO,CAACM,CAAC,CAAC,CAACF,CAAC,CAAC,CAACU,GAAG,CAACC,MAAM,iBACvBP,OAAA;YAAAC,QAAA,eACED,OAAA;cAAAC,QAAA,GAAIM,MAAM,CAACC,IAAI,EAAC,GAAC,EAACD,MAAM,CAACE,GAAG;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK,GADzBE,MAAM,CAACC,IAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAItB,CAAC;QAAA,GAPM,GAAEP,CAAE,IAAGF,CAAE,EAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QASrB;QACDR,GAAG,CAACa,IAAI,CAACX,IAAI,CAAC;MAChB,CAAC,MAAM;QACLF,GAAG,CAACa,IAAI,eAACV,OAAA,WAAU,GAAEF,CAAE,IAAGF,CAAE,EAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,CAAC;MACvC;IAAC;;IAED;IACAZ,IAAI,CAACiB,IAAI,eAACV,OAAA;MAAAC,QAAA,EAAaJ;IAAG,GAAPD,CAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY,CAAC;EACnC;EACDM,OAAO,CAACC,GAAG,CAACnB,IAAI,CAAC;EACjB,OAAOA,IAAI;AACZ;AAACoB,EAAA,GAjCetB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}