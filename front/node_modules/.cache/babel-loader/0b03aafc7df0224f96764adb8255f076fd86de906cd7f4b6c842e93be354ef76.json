{"ast":null,"code":"var _jsxFileName = \"/home/woot/coding/hyperiums2/front/src/App.js\",\n  _s = $RefreshSig$();\nimport { FormatData } from './components/formatData';\nimport { FormatToCSV } from './components/formatToCSV';\nimport { MaxCoord } from './components/maxCoord';\nimport { ReadFile } from './components/readFile';\nimport { RenderGrid } from './components/renderGrid';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Appel de la fonction pour lire le fichier local\n  const fileName = './planetsFull.txt';\n  const file = ReadFile(fileName);\n  // Appel de la fonction pour formatter le fichier au format CSV\n  const csvFile = FormatToCSV(file);\n  // Appel de la fonction qui structure les données\n  const data = FormatData(csvFile);\n  // Appel de la fonction pour avoir la coordonnée maximale\n  const maxCoord = MaxCoord(csvFile);\n  // Génération de la grille\n  const grid = RenderGrid(data, maxCoord);\n  useEffect(() => {\n    const container = document.getElementById(\"container\");\n    container.addEventListener(\"wheel\", function (event) {\n      var delta = event.deltaY;\n      var table = document.getElementById(\"myTable\");\n      if (delta > 0) {\n        // Zoom arrière (dézoom)\n        table.style.transform = \"scale(0.9)\";\n      } else if (delta < 0) {\n        // Zoom avant (zoom)\n        table.style.transform = \"scale(1.1)\";\n      }\n\n      // Ajustement de la position du tableau en fonction du niveau de zoom\n      var containerWidth = container.offsetWidth;\n      var containerHeight = container.offsetHeight;\n      var tableWidth = table.offsetWidth;\n      var tableHeight = table.offsetHeight;\n      var scale = parseFloat(table.style.transform.replace(\"scale(\", \"\").replace(\")\", \"\"));\n      var translateX = (containerWidth - tableWidth * scale) / 2;\n      var translateY = (containerHeight - tableHeight * scale) / 2;\n      table.style.transform += \" translateX(\" + translateX + \"px) translateY(\" + translateY + \"px)\";\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"myTable\",\n      style: {\n        width: \"5000px\",\n        height: \"5000px\"\n      },\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["FormatData","FormatToCSV","MaxCoord","ReadFile","RenderGrid","useEffect","jsxDEV","_jsxDEV","App","_s","fileName","file","csvFile","data","maxCoord","grid","container","document","getElementById","addEventListener","event","delta","deltaY","table","style","transform","containerWidth","offsetWidth","containerHeight","offsetHeight","tableWidth","tableHeight","scale","parseFloat","replace","translateX","translateY","id","children","width","height","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/woot/coding/hyperiums2/front/src/App.js"],"sourcesContent":["import { FormatData } from './components/formatData';\nimport { FormatToCSV } from './components/formatToCSV';\nimport { MaxCoord } from './components/maxCoord';\nimport { ReadFile } from './components/readFile';\nimport { RenderGrid } from './components/renderGrid';\nimport { useEffect } from 'react';\n\nfunction App() {\n  // Appel de la fonction pour lire le fichier local\n  const fileName = './planetsFull.txt';\n  const file = ReadFile(fileName);\n  // Appel de la fonction pour formatter le fichier au format CSV\n  const csvFile = FormatToCSV(file);\n  // Appel de la fonction qui structure les données\n  const data = FormatData(csvFile);\n  // Appel de la fonction pour avoir la coordonnée maximale\n  const maxCoord = MaxCoord(csvFile);\n  // Génération de la grille\n  const grid = RenderGrid(data, maxCoord);\n\n  useEffect(() => {\n    const container = document.getElementById(\"container\");\n\n    container.addEventListener(\"wheel\", function(event) {\n      var delta = event.deltaY;\n      var table = document.getElementById(\"myTable\");\n\n      if (delta > 0) {\n        // Zoom arrière (dézoom)\n        table.style.transform = \"scale(0.9)\";\n      } else if (delta < 0) {\n        // Zoom avant (zoom)\n        table.style.transform = \"scale(1.1)\";\n      }\n\n      // Ajustement de la position du tableau en fonction du niveau de zoom\n      var containerWidth = container.offsetWidth;\n      var containerHeight = container.offsetHeight;\n      var tableWidth = table.offsetWidth;\n      var tableHeight = table.offsetHeight;\n      var scale = parseFloat(table.style.transform.replace(\"scale(\", \"\").replace(\")\", \"\"));\n      var translateX = (containerWidth - (tableWidth * scale)) / 2;\n      var translateY = (containerHeight - (tableHeight * scale)) / 2;\n      table.style.transform += \" translateX(\" + translateX + \"px) translateY(\" + translateY + \"px)\";\n    });\n  }, []);\n\n  return(\n    <div id=\"container\">\n      <table id=\"myTable\" style={{width: \"5000px\", height: \"5000px\"}}>\n        {grid}\n      </table>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,QAAQ,GAAG,mBAAmB;EACpC,MAAMC,IAAI,GAAGR,QAAQ,CAACO,QAAQ,CAAC;EAC/B;EACA,MAAME,OAAO,GAAGX,WAAW,CAACU,IAAI,CAAC;EACjC;EACA,MAAME,IAAI,GAAGb,UAAU,CAACY,OAAO,CAAC;EAChC;EACA,MAAME,QAAQ,GAAGZ,QAAQ,CAACU,OAAO,CAAC;EAClC;EACA,MAAMG,IAAI,GAAGX,UAAU,CAACS,IAAI,EAAEC,QAAQ,CAAC;EAEvCT,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IAEtDF,SAAS,CAACG,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;MAClD,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM;MACxB,IAAIC,KAAK,GAAGN,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAE9C,IAAIG,KAAK,GAAG,CAAC,EAAE;QACb;QACAE,KAAK,CAACC,KAAK,CAACC,SAAS,GAAG,YAAY;MACtC,CAAC,MAAM,IAAIJ,KAAK,GAAG,CAAC,EAAE;QACpB;QACAE,KAAK,CAACC,KAAK,CAACC,SAAS,GAAG,YAAY;MACtC;;MAEA;MACA,IAAIC,cAAc,GAAGV,SAAS,CAACW,WAAW;MAC1C,IAAIC,eAAe,GAAGZ,SAAS,CAACa,YAAY;MAC5C,IAAIC,UAAU,GAAGP,KAAK,CAACI,WAAW;MAClC,IAAII,WAAW,GAAGR,KAAK,CAACM,YAAY;MACpC,IAAIG,KAAK,GAAGC,UAAU,CAACV,KAAK,CAACC,KAAK,CAACC,SAAS,CAACS,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MACpF,IAAIC,UAAU,GAAG,CAACT,cAAc,GAAII,UAAU,GAAGE,KAAM,IAAI,CAAC;MAC5D,IAAII,UAAU,GAAG,CAACR,eAAe,GAAIG,WAAW,GAAGC,KAAM,IAAI,CAAC;MAC9DT,KAAK,CAACC,KAAK,CAACC,SAAS,IAAI,cAAc,GAAGU,UAAU,GAAG,iBAAiB,GAAGC,UAAU,GAAG,KAAK;IAC/F,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAK8B,EAAE,EAAC,WAAW;IAAAC,QAAA,eACjB/B,OAAA;MAAO8B,EAAE,EAAC,SAAS;MAACb,KAAK,EAAE;QAACe,KAAK,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAF,QAAA,EAC5DvB;IAAI;MAAAL,QAAA,EAAA+B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAjC,QAAA,EAAA+B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAAClC,EAAA,CA/CQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}